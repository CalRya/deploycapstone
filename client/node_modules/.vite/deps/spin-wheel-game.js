import {
  require_react
} from "./chunk-RUPNRBO7.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/spin-wheel-game/dist/spin-wheel-game.es.js
var import_react = __toESM(require_react());
var QA = { exports: {} };
var X = {};
var DA;
function ue() {
  return DA || (DA = 1, function() {
    var T = import_react.default, P = Symbol.for("react.element"), G = Symbol.for("react.portal"), p = Symbol.for("react.fragment"), b = Symbol.for("react.strict_mode"), O = Symbol.for("react.profiler"), h = Symbol.for("react.provider"), k = Symbol.for("react.context"), C = Symbol.for("react.forward_ref"), Q = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), w = Symbol.for("react.memo"), R = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), _ = Symbol.iterator, sA = "@@iterator";
    function uA(A) {
      if (A === null || typeof A != "object")
        return null;
      var e = _ && A[_] || A[sA];
      return typeof e == "function" ? e : null;
    }
    var Y = T.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function S(A) {
      {
        for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), V = 1; V < e; V++)
          r[V - 1] = arguments[V];
        W("error", A, r);
      }
    }
    function W(A, e, r) {
      {
        var V = Y.ReactDebugCurrentFrame, i = V.getStackAddendum();
        i !== "" && (e += "%s", r = r.concat([i]));
        var o = r.map(function(a) {
          return String(a);
        });
        o.unshift("Warning: " + e), Function.prototype.apply.call(console[A], console, o);
      }
    }
    var cA = false, $ = false, K = false, fA = false, J = false, F;
    F = Symbol.for("react.module.reference");
    function D(A) {
      return !!(typeof A == "string" || typeof A == "function" || A === p || A === O || J || A === b || A === Q || A === d || fA || A === g || cA || $ || K || typeof A == "object" && A !== null && (A.$$typeof === R || A.$$typeof === w || A.$$typeof === h || A.$$typeof === k || A.$$typeof === C || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      A.$$typeof === F || A.getModuleId !== void 0));
    }
    function L(A, e, r) {
      var V = A.displayName;
      if (V)
        return V;
      var i = e.displayName || e.name || "";
      return i !== "" ? r + "(" + i + ")" : r;
    }
    function Z(A) {
      return A.displayName || "Context";
    }
    function y(A) {
      if (A == null)
        return null;
      if (typeof A.tag == "number" && S("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof A == "function")
        return A.displayName || A.name || null;
      if (typeof A == "string")
        return A;
      switch (A) {
        case p:
          return "Fragment";
        case G:
          return "Portal";
        case O:
          return "Profiler";
        case b:
          return "StrictMode";
        case Q:
          return "Suspense";
        case d:
          return "SuspenseList";
      }
      if (typeof A == "object")
        switch (A.$$typeof) {
          case k:
            var e = A;
            return Z(e) + ".Consumer";
          case h:
            var r = A;
            return Z(r._context) + ".Provider";
          case C:
            return L(A, A.render, "ForwardRef");
          case w:
            var V = A.displayName || null;
            return V !== null ? V : y(A.type) || "Memo";
          case R: {
            var i = A, o = i._payload, a = i._init;
            try {
              return y(a(o));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var M = Object.assign, E = 0, I, AA, eA, rA, tA, N, VA;
    function nA() {
    }
    nA.__reactDisabledLog = true;
    function gA() {
      {
        if (E === 0) {
          I = console.log, AA = console.info, eA = console.warn, rA = console.error, tA = console.group, N = console.groupCollapsed, VA = console.groupEnd;
          var A = {
            configurable: true,
            enumerable: true,
            value: nA,
            writable: true
          };
          Object.defineProperties(console, {
            info: A,
            log: A,
            warn: A,
            error: A,
            group: A,
            groupCollapsed: A,
            groupEnd: A
          });
        }
        E++;
      }
    }
    function EA() {
      {
        if (E--, E === 0) {
          var A = {
            configurable: true,
            enumerable: true,
            writable: true
          };
          Object.defineProperties(console, {
            log: M({}, A, {
              value: I
            }),
            info: M({}, A, {
              value: AA
            }),
            warn: M({}, A, {
              value: eA
            }),
            error: M({}, A, {
              value: rA
            }),
            group: M({}, A, {
              value: tA
            }),
            groupCollapsed: M({}, A, {
              value: N
            }),
            groupEnd: M({}, A, {
              value: VA
            })
          });
        }
        E < 0 && S("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var t = Y.ReactCurrentDispatcher, c;
    function s(A, e, r) {
      {
        if (c === void 0)
          try {
            throw Error();
          } catch (i) {
            var V = i.stack.trim().match(/\n( *(at )?)/);
            c = V && V[1] || "";
          }
        return `
` + c + A;
      }
    }
    var l = false, v;
    {
      var aA = typeof WeakMap == "function" ? WeakMap : Map;
      v = new aA();
    }
    function mA(A, e) {
      if (!A || l)
        return "";
      {
        var r = v.get(A);
        if (r !== void 0)
          return r;
      }
      var V;
      l = true;
      var i = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var o;
      o = t.current, t.current = null, gA();
      try {
        if (e) {
          var a = function() {
            throw Error();
          };
          if (Object.defineProperty(a.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(a, []);
            } catch (q) {
              V = q;
            }
            Reflect.construct(A, [], a);
          } else {
            try {
              a.call();
            } catch (q) {
              V = q;
            }
            A.call(a.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (q) {
            V = q;
          }
          A();
        }
      } catch (q) {
        if (q && V && typeof q.stack == "string") {
          for (var n = q.stack.split(`
`), B = V.stack.split(`
`), u = n.length - 1, f = B.length - 1; u >= 1 && f >= 0 && n[u] !== B[f]; )
            f--;
          for (; u >= 1 && f >= 0; u--, f--)
            if (n[u] !== B[f]) {
              if (u !== 1 || f !== 1)
                do
                  if (u--, f--, f < 0 || n[u] !== B[f]) {
                    var m = `
` + n[u].replace(" at new ", " at ");
                    return A.displayName && m.includes("<anonymous>") && (m = m.replace("<anonymous>", A.displayName)), typeof A == "function" && v.set(A, m), m;
                  }
                while (u >= 1 && f >= 0);
              break;
            }
        }
      } finally {
        l = false, t.current = o, EA(), Error.prepareStackTrace = i;
      }
      var x = A ? A.displayName || A.name : "", FA = x ? s(x) : "";
      return typeof A == "function" && v.set(A, FA), FA;
    }
    function OA(A, e, r) {
      return mA(A, false);
    }
    function KA(A) {
      var e = A.prototype;
      return !!(e && e.isReactComponent);
    }
    function iA(A, e, r) {
      if (A == null)
        return "";
      if (typeof A == "function")
        return mA(A, KA(A));
      if (typeof A == "string")
        return s(A);
      switch (A) {
        case Q:
          return s("Suspense");
        case d:
          return s("SuspenseList");
      }
      if (typeof A == "object")
        switch (A.$$typeof) {
          case C:
            return OA(A.render);
          case w:
            return iA(A.type, e, r);
          case R: {
            var V = A, i = V._payload, o = V._init;
            try {
              return iA(o(i), e, r);
            } catch {
            }
          }
        }
      return "";
    }
    var oA = Object.prototype.hasOwnProperty, wA = {}, yA = Y.ReactDebugCurrentFrame;
    function lA(A) {
      if (A) {
        var e = A._owner, r = iA(A.type, A._source, e ? e.type : null);
        yA.setExtraStackFrame(r);
      } else
        yA.setExtraStackFrame(null);
    }
    function jA(A, e, r, V, i) {
      {
        var o = Function.call.bind(oA);
        for (var a in A)
          if (o(A, a)) {
            var n = void 0;
            try {
              if (typeof A[a] != "function") {
                var B = Error((V || "React class") + ": " + r + " type `" + a + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof A[a] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw B.name = "Invariant Violation", B;
              }
              n = A[a](e, a, V, r, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (u) {
              n = u;
            }
            n && !(n instanceof Error) && (lA(i), S("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", V || "React class", r, a, typeof n), lA(null)), n instanceof Error && !(n.message in wA) && (wA[n.message] = true, lA(i), S("Failed %s type: %s", r, n.message), lA(null));
          }
      }
    }
    var xA = Array.isArray;
    function IA(A) {
      return xA(A);
    }
    function WA(A) {
      {
        var e = typeof Symbol == "function" && Symbol.toStringTag, r = e && A[Symbol.toStringTag] || A.constructor.name || "Object";
        return r;
      }
    }
    function LA(A) {
      try {
        return vA(A), false;
      } catch {
        return true;
      }
    }
    function vA(A) {
      return "" + A;
    }
    function RA(A) {
      if (LA(A))
        return S("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", WA(A)), vA(A);
    }
    var H = Y.ReactCurrentOwner, ZA = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    }, MA, kA, hA;
    hA = {};
    function NA(A) {
      if (oA.call(A, "ref")) {
        var e = Object.getOwnPropertyDescriptor(A, "ref").get;
        if (e && e.isReactWarning)
          return false;
      }
      return A.ref !== void 0;
    }
    function HA(A) {
      if (oA.call(A, "key")) {
        var e = Object.getOwnPropertyDescriptor(A, "key").get;
        if (e && e.isReactWarning)
          return false;
      }
      return A.key !== void 0;
    }
    function XA(A, e) {
      if (typeof A.ref == "string" && H.current && e && H.current.stateNode !== e) {
        var r = y(H.current.type);
        hA[r] || (S('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', y(H.current.type), A.ref), hA[r] = true);
      }
    }
    function zA(A, e) {
      {
        var r = function() {
          MA || (MA = true, S("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", e));
        };
        r.isReactWarning = true, Object.defineProperty(A, "key", {
          get: r,
          configurable: true
        });
      }
    }
    function _A(A, e) {
      {
        var r = function() {
          kA || (kA = true, S("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", e));
        };
        r.isReactWarning = true, Object.defineProperty(A, "ref", {
          get: r,
          configurable: true
        });
      }
    }
    var $A = function(A, e, r, V, i, o, a) {
      var n = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: P,
        // Built-in properties that belong on the element
        type: A,
        key: e,
        ref: r,
        props: a,
        // Record the component responsible for creating this element.
        _owner: o
      };
      return n._store = {}, Object.defineProperty(n._store, "validated", {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      }), Object.defineProperty(n, "_self", {
        configurable: false,
        enumerable: false,
        writable: false,
        value: V
      }), Object.defineProperty(n, "_source", {
        configurable: false,
        enumerable: false,
        writable: false,
        value: i
      }), Object.freeze && (Object.freeze(n.props), Object.freeze(n)), n;
    };
    function Ae(A, e, r, V, i) {
      {
        var o, a = {}, n = null, B = null;
        r !== void 0 && (RA(r), n = "" + r), HA(e) && (RA(e.key), n = "" + e.key), NA(e) && (B = e.ref, XA(e, i));
        for (o in e)
          oA.call(e, o) && !ZA.hasOwnProperty(o) && (a[o] = e[o]);
        if (A && A.defaultProps) {
          var u = A.defaultProps;
          for (o in u)
            a[o] === void 0 && (a[o] = u[o]);
        }
        if (n || B) {
          var f = typeof A == "function" ? A.displayName || A.name || "Unknown" : A;
          n && zA(a, f), B && _A(a, f);
        }
        return $A(A, n, B, i, V, H.current, a);
      }
    }
    var CA = Y.ReactCurrentOwner, YA = Y.ReactDebugCurrentFrame;
    function j(A) {
      if (A) {
        var e = A._owner, r = iA(A.type, A._source, e ? e.type : null);
        YA.setExtraStackFrame(r);
      } else
        YA.setExtraStackFrame(null);
    }
    var SA;
    SA = false;
    function dA(A) {
      return typeof A == "object" && A !== null && A.$$typeof === P;
    }
    function qA() {
      {
        if (CA.current) {
          var A = y(CA.current.type);
          if (A)
            return `

Check the render method of \`` + A + "`.";
        }
        return "";
      }
    }
    function ee(A) {
      {
        if (A !== void 0) {
          var e = A.fileName.replace(/^.*[\\\/]/, ""), r = A.lineNumber;
          return `

Check your code at ` + e + ":" + r + ".";
        }
        return "";
      }
    }
    var GA = {};
    function re(A) {
      {
        var e = qA();
        if (!e) {
          var r = typeof A == "string" ? A : A.displayName || A.name;
          r && (e = `

Check the top-level render call using <` + r + ">.");
        }
        return e;
      }
    }
    function JA(A, e) {
      {
        if (!A._store || A._store.validated || A.key != null)
          return;
        A._store.validated = true;
        var r = re(e);
        if (GA[r])
          return;
        GA[r] = true;
        var V = "";
        A && A._owner && A._owner !== CA.current && (V = " It was passed a child from " + y(A._owner.type) + "."), j(A), S('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', r, V), j(null);
      }
    }
    function UA(A, e) {
      {
        if (typeof A != "object")
          return;
        if (IA(A))
          for (var r = 0; r < A.length; r++) {
            var V = A[r];
            dA(V) && JA(V, e);
          }
        else if (dA(A))
          A._store && (A._store.validated = true);
        else if (A) {
          var i = uA(A);
          if (typeof i == "function" && i !== A.entries)
            for (var o = i.call(A), a; !(a = o.next()).done; )
              dA(a.value) && JA(a.value, e);
        }
      }
    }
    function te(A) {
      {
        var e = A.type;
        if (e == null || typeof e == "string")
          return;
        var r;
        if (typeof e == "function")
          r = e.propTypes;
        else if (typeof e == "object" && (e.$$typeof === C || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        e.$$typeof === w))
          r = e.propTypes;
        else
          return;
        if (r) {
          var V = y(e);
          jA(r, A.props, "prop", V, A);
        } else if (e.PropTypes !== void 0 && !SA) {
          SA = true;
          var i = y(e);
          S("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", i || "Unknown");
        }
        typeof e.getDefaultProps == "function" && !e.getDefaultProps.isReactClassApproved && S("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Ve(A) {
      {
        for (var e = Object.keys(A.props), r = 0; r < e.length; r++) {
          var V = e[r];
          if (V !== "children" && V !== "key") {
            j(A), S("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", V), j(null);
            break;
          }
        }
        A.ref !== null && (j(A), S("Invalid attribute `ref` supplied to `React.Fragment`."), j(null));
      }
    }
    function PA(A, e, r, V, i, o) {
      {
        var a = D(A);
        if (!a) {
          var n = "";
          (A === void 0 || typeof A == "object" && A !== null && Object.keys(A).length === 0) && (n += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var B = ee(i);
          B ? n += B : n += qA();
          var u;
          A === null ? u = "null" : IA(A) ? u = "array" : A !== void 0 && A.$$typeof === P ? (u = "<" + (y(A.type) || "Unknown") + " />", n = " Did you accidentally export a JSX literal instead of a component?") : u = typeof A, S("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", u, n);
        }
        var f = Ae(A, e, r, i, o);
        if (f == null)
          return f;
        if (a) {
          var m = e.children;
          if (m !== void 0)
            if (V)
              if (IA(m)) {
                for (var x = 0; x < m.length; x++)
                  UA(m[x], A);
                Object.freeze && Object.freeze(m);
              } else
                S("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              UA(m, A);
        }
        return A === p ? Ve(f) : te(f), f;
      }
    }
    function ne(A, e, r) {
      return PA(A, e, r, true);
    }
    function ae(A, e, r) {
      return PA(A, e, r, false);
    }
    var ie = ae, oe = ne;
    X.Fragment = p, X.jsx = ie, X.jsxs = oe;
  }()), X;
}
false ? QA.exports = ce() : QA.exports = ue();
var pA = QA.exports;
var fe = "data:audio/mpeg;base64,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f6W2scv///8sbRgYyDQxndVKfv/CIKy0cVnqBAAFJHsYOihYRIGpKRh1wIDhoMJS9yZRGFvzl1TAcpIFwLyMwegU0qSTTWiTB6kNIlhNgu4mI4B7mJJIFNI+Ympss0PoomhtrNHUg+pqt1Mgmy2VTZSk0HQX+mhZL0lfovpKuZIrNUbf+qim7rSUiicUpS3u2tSCdCiq7O7eq7qRZSzKy4cAABEAIAAR1AsCAcD/+4Jk7gDzmjzPuywcYDxJ2BBlQlYNrM9DTLBNgLGoXwHAFrnTqCFAULdqrDSaLnQ7zvP/9d/tJqHTN8hMBSdeCHg+f/////////+EwESnldVYIYGVWo1I5XIziACskOm2Im1OKWAAOTE4aQSNwRpchnTD1oPGlcTZQFcaCXVJ3q9QFwdxh+qxOp5UIx6oCEJR/HydTiqMO3uy8W0rIpcWU0WBR2cWtew1T4bZ1W37Z2x08gx4ECFjSWfK5WRI+XjHLGeRnl8y/eN0hVhOc1nu79TNCvjKtgcHj1VqOm4mW6PrzdyPB45tEVerCiQILmyRnkrp/OzwK7xrESlfTPt/Wu66xrfpauf2R5Bf1jxIzyWIx3BDwLjAmIFREcM0Sc3p/8kA6K+QKrJODGfcFkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+4Jk7gAEMV/PPWmgAjch56yuaAEYiZVHWaeAEGkHoIMm8AGqqqqqqqqqqqqqqqqqqqqqBBgAEJmRItoakXE4V0cxOi5MrccxOkKhsKGnSFFgoSjhxIlPqqrzNeZmecSRLB0RA1DsFTpUNKBpxZ8TRKGuWBo8qsFYlljygaeJcS+WBrlTvEX/4iPcFQC6BgICaqTASq/EQcBoGol//+DXKnVhqItn/LHuCvUe//8qd4NSx5Z2JQ1VTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+4BknQ/ywBdMzzzAACsgprLhiAAAAAGkAAAAIAAANIAAAARVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==";
var U = typeof window < "u" ? new Audio(fe) : new Audio();
var Ee = ({
  segments: T,
  onFinished: P,
  primaryColor: G = "black",
  contrastColor: p = "white",
  buttonText: b = "Spin",
  isOnlyOnce: O = false,
  size: h = 290,
  upDuration: k = 100,
  downDuration: C = 600,
  fontFamily: Q = "Arial",
  arrowLocation: d = "center",
  showTextOnSpin: w = true,
  isSpinSound: R = true
}) => {
  const g = T.map((t) => t.segmentText).filter(Boolean), _ = T.map((t) => t.segColor).filter(Boolean), [sA, uA] = (0, import_react.useState)(false), [Y, S] = (0, import_react.useState)(false), [W, cA] = (0, import_react.useState)("");
  let $ = "", K = 0;
  const fA = g.length;
  let J = 0, F = 0, D = null, L = Math.PI / g.length;
  const Z = g.length * k, y = g.length * C;
  let M = 0;
  const E = h, I = h;
  (0, import_react.useEffect)(() => {
    AA(), setTimeout(() => {
      window.scrollTo(0, 1);
    }, 0);
  }, []);
  const AA = () => {
    eA(), N();
  }, eA = () => {
    var c;
    let t = document.getElementById("canvas");
    t || (t = document.createElement("canvas"), t.setAttribute("width", `${h * 2}`), t.setAttribute("height", `${h * 2}`), t.setAttribute("id", "canvas"), (c = document == null ? void 0 : document.getElementById("wheel")) == null || c.appendChild(t)), D = t.getContext("2d"), t.style.borderRadius = "50%", t == null || t.addEventListener("click", rA, false);
  }, rA = () => {
    S(true), K === 0 && (M = (/* @__PURE__ */ new Date()).getTime(), L = Math.PI / g.length, K = setInterval(tA, fA * 5));
  }, tA = () => {
    N();
    const t = (/* @__PURE__ */ new Date()).getTime() - M;
    let c = 0, s = false;
    for (t < Z ? (c = t / Z, F = L * Math.sin(c * Math.PI / 2)) : (c = t / y, F = L * Math.sin(c * Math.PI / 2 + Math.PI / 2), c >= 1 && (s = true)), J += F; J >= Math.PI * 2; )
      J -= Math.PI * 2;
    s && (uA(true), P($), clearInterval(K), K = 0, F = 0, U.pause(), U.currentTime = 0);
  };
  (0, import_react.useMemo)(() => {
    U.currentTime = 0, W && R && Y ? U == null || U.play() : (U.pause(), U.currentTime = 0);
  }, [W, R]);
  const N = () => {
    EA(), nA(), gA();
  }, VA = (t, c, s) => {
    const l = D, v = g[t];
    l.save(), l.beginPath(), l.moveTo(E, I), l.arc(E, I, h, c, s, false), l.lineTo(E, I), l.closePath(), l.fillStyle = _[t], l.fill(), l.stroke(), l.save(), l.translate(E, I), l.rotate((c + s) / 2), l.fillStyle = p, l.font = "bold 1em " + Q, l.fillText(v.substring(0, 21), h / 2 + 20, 0), l.restore();
  }, nA = () => {
    const t = D;
    let c = J;
    const s = g.length, l = Math.PI * 2;
    t.lineWidth = 1, t.strokeStyle = G, t.textBaseline = "middle", t.textAlign = "center", t.font = "1em " + Q;
    for (let v = 1; v <= s; v++) {
      const aA = l * (v / s) + J;
      VA(v - 1, c, aA), c = aA;
    }
    t.beginPath(), t.arc(E, I, 30, 0, l, false), t.closePath(), t.fillStyle = G, t.lineWidth = 2, t.strokeStyle = p, t.fill(), t.font = "bold 1em " + Q, t.fillStyle = p, t.textAlign = "center", t.fillText(b, E, I + 3), t.stroke(), t.beginPath(), t.arc(E, I, h, 0, l, false), t.closePath(), t.lineWidth = 4, t.strokeStyle = G, t.stroke();
  }, gA = () => {
    const t = D;
    t.lineWidth = 1, t.strokeStyle = p, t.fileStyle = p, t.beginPath(), d === "top" ? (t.moveTo(E + 20, I / 15), t.lineTo(E - 20, I / 15), t.lineTo(E, I - I / 1.35)) : (t.moveTo(E + 20, I - 30), t.lineTo(E - 20, I - 30), t.lineTo(E, I - I / 2.5)), t.closePath(), t.fill();
    const c = J + Math.PI / 2;
    let s = g.length - Math.floor(c / (Math.PI * 2) * g.length) - 1;
    s < 0 ? s = s + g.length : s >= g.length && (s = s - g.length), t.textAlign = "center", t.textBaseline = "middle", t.fillStyle = G, t.font = "bold 1.5em " + Q, $ = g[s], cA(g[s]);
  }, EA = () => {
    D.clearRect(0, 0, h, h);
  };
  return pA.jsxs("div", { id: "wheel", children: [
    pA.jsx(
      "canvas",
      {
        id: "canvas",
        width: h * 2,
        height: h * 2,
        style: {
          pointerEvents: sA && O ? "none" : "auto"
        }
      }
    ),
    w && Y && pA.jsx("div", { style: { textAlign: "center", padding: "20px", fontWeight: "bold", fontSize: "1.5em", fontFamily: Q }, children: W })
  ] });
};
export {
  Ee as SpinWheel
};
/*! Bundled license information:

spin-wheel-game/dist/spin-wheel-game.es.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

spin-wheel-game/dist/spin-wheel-game.es.js:
  (**
   * @license React
   * react-jsx-runtime.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=spin-wheel-game.js.map
